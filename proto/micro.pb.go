// Code generated by protoc-gen-go. DO NOT EDIT.
// source: micro.proto

package proto

import (
	context "context"
	fmt "fmt"
	proto "github.com/golang/protobuf/proto"
	timestamp "github.com/golang/protobuf/ptypes/timestamp"
	grpc "google.golang.org/grpc"
	codes "google.golang.org/grpc/codes"
	status "google.golang.org/grpc/status"
	math "math"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.ProtoPackageIsVersion3 // please upgrade the proto package

// Timestamp from public import google/protobuf/timestamp.proto
type Timestamp = timestamp.Timestamp

//产品表
type Product struct {
	Id                   int32          `protobuf:"varint,1,opt,name=id,proto3" json:"id,omitempty"`
	ProductName          string         `protobuf:"bytes,2,opt,name=productName,proto3" json:"productName,omitempty"`
	Manual               string         `protobuf:"bytes,3,opt,name=manual,proto3" json:"manual,omitempty"`
	State                int32          `protobuf:"varint,4,opt,name=state,proto3" json:"state,omitempty"`
	SiteId               int32          `protobuf:"varint,5,opt,name=siteId,proto3" json:"siteId,omitempty"`
	Areas                string         `protobuf:"bytes,6,opt,name=areas,proto3" json:"areas,omitempty"`
	Address              string         `protobuf:"bytes,7,opt,name=address,proto3" json:"address,omitempty"`
	Content              string         `protobuf:"bytes,8,opt,name=content,proto3" json:"content,omitempty"`
	AdminuserId          int32          `protobuf:"varint,9,opt,name=adminuserId,proto3" json:"adminuserId,omitempty"`
	Sorts                int32          `protobuf:"varint,10,opt,name=sorts,proto3" json:"sorts,omitempty"`
	Created              string         `protobuf:"bytes,11,opt,name=created,proto3" json:"created,omitempty"`
	PInfo                []*ProductInfo `protobuf:"bytes,20,rep,name=PInfo,proto3" json:"PInfo,omitempty"`
	XXX_NoUnkeyedLiteral struct{}       `json:"-"`
	XXX_unrecognized     []byte         `json:"-"`
	XXX_sizecache        int32          `json:"-"`
}

func (m *Product) Reset()         { *m = Product{} }
func (m *Product) String() string { return proto.CompactTextString(m) }
func (*Product) ProtoMessage()    {}
func (*Product) Descriptor() ([]byte, []int) {
	return fileDescriptor_0147923bbc6a29d9, []int{0}
}

func (m *Product) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_Product.Unmarshal(m, b)
}
func (m *Product) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_Product.Marshal(b, m, deterministic)
}
func (m *Product) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Product.Merge(m, src)
}
func (m *Product) XXX_Size() int {
	return xxx_messageInfo_Product.Size(m)
}
func (m *Product) XXX_DiscardUnknown() {
	xxx_messageInfo_Product.DiscardUnknown(m)
}

var xxx_messageInfo_Product proto.InternalMessageInfo

func (m *Product) GetId() int32 {
	if m != nil {
		return m.Id
	}
	return 0
}

func (m *Product) GetProductName() string {
	if m != nil {
		return m.ProductName
	}
	return ""
}

func (m *Product) GetManual() string {
	if m != nil {
		return m.Manual
	}
	return ""
}

func (m *Product) GetState() int32 {
	if m != nil {
		return m.State
	}
	return 0
}

func (m *Product) GetSiteId() int32 {
	if m != nil {
		return m.SiteId
	}
	return 0
}

func (m *Product) GetAreas() string {
	if m != nil {
		return m.Areas
	}
	return ""
}

func (m *Product) GetAddress() string {
	if m != nil {
		return m.Address
	}
	return ""
}

func (m *Product) GetContent() string {
	if m != nil {
		return m.Content
	}
	return ""
}

func (m *Product) GetAdminuserId() int32 {
	if m != nil {
		return m.AdminuserId
	}
	return 0
}

func (m *Product) GetSorts() int32 {
	if m != nil {
		return m.Sorts
	}
	return 0
}

func (m *Product) GetCreated() string {
	if m != nil {
		return m.Created
	}
	return ""
}

func (m *Product) GetPInfo() []*ProductInfo {
	if m != nil {
		return m.PInfo
	}
	return nil
}

//详情表
type ProductInfo struct {
	Id                   int32    `protobuf:"varint,1,opt,name=id,proto3" json:"id,omitempty"`
	ProductId            int32    `protobuf:"varint,2,opt,name=productId,proto3" json:"productId,omitempty"`
	Shopname             string   `protobuf:"bytes,3,opt,name=shopname,proto3" json:"shopname,omitempty"`
	Img                  string   `protobuf:"bytes,4,opt,name=img,proto3" json:"img,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *ProductInfo) Reset()         { *m = ProductInfo{} }
func (m *ProductInfo) String() string { return proto.CompactTextString(m) }
func (*ProductInfo) ProtoMessage()    {}
func (*ProductInfo) Descriptor() ([]byte, []int) {
	return fileDescriptor_0147923bbc6a29d9, []int{1}
}

func (m *ProductInfo) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_ProductInfo.Unmarshal(m, b)
}
func (m *ProductInfo) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_ProductInfo.Marshal(b, m, deterministic)
}
func (m *ProductInfo) XXX_Merge(src proto.Message) {
	xxx_messageInfo_ProductInfo.Merge(m, src)
}
func (m *ProductInfo) XXX_Size() int {
	return xxx_messageInfo_ProductInfo.Size(m)
}
func (m *ProductInfo) XXX_DiscardUnknown() {
	xxx_messageInfo_ProductInfo.DiscardUnknown(m)
}

var xxx_messageInfo_ProductInfo proto.InternalMessageInfo

func (m *ProductInfo) GetId() int32 {
	if m != nil {
		return m.Id
	}
	return 0
}

func (m *ProductInfo) GetProductId() int32 {
	if m != nil {
		return m.ProductId
	}
	return 0
}

func (m *ProductInfo) GetShopname() string {
	if m != nil {
		return m.Shopname
	}
	return ""
}

func (m *ProductInfo) GetImg() string {
	if m != nil {
		return m.Img
	}
	return ""
}

//查询一条
type SbyId struct {
	Id                   int32    `protobuf:"varint,1,opt,name=id,proto3" json:"id,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *SbyId) Reset()         { *m = SbyId{} }
func (m *SbyId) String() string { return proto.CompactTextString(m) }
func (*SbyId) ProtoMessage()    {}
func (*SbyId) Descriptor() ([]byte, []int) {
	return fileDescriptor_0147923bbc6a29d9, []int{2}
}

func (m *SbyId) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_SbyId.Unmarshal(m, b)
}
func (m *SbyId) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_SbyId.Marshal(b, m, deterministic)
}
func (m *SbyId) XXX_Merge(src proto.Message) {
	xxx_messageInfo_SbyId.Merge(m, src)
}
func (m *SbyId) XXX_Size() int {
	return xxx_messageInfo_SbyId.Size(m)
}
func (m *SbyId) XXX_DiscardUnknown() {
	xxx_messageInfo_SbyId.DiscardUnknown(m)
}

var xxx_messageInfo_SbyId proto.InternalMessageInfo

func (m *SbyId) GetId() int32 {
	if m != nil {
		return m.Id
	}
	return 0
}

//查询所有
type SAll struct {
	Page                 int32    `protobuf:"varint,1,opt,name=page,proto3" json:"page,omitempty"`
	Limit                int32    `protobuf:"varint,2,opt,name=limit,proto3" json:"limit,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *SAll) Reset()         { *m = SAll{} }
func (m *SAll) String() string { return proto.CompactTextString(m) }
func (*SAll) ProtoMessage()    {}
func (*SAll) Descriptor() ([]byte, []int) {
	return fileDescriptor_0147923bbc6a29d9, []int{3}
}

func (m *SAll) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_SAll.Unmarshal(m, b)
}
func (m *SAll) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_SAll.Marshal(b, m, deterministic)
}
func (m *SAll) XXX_Merge(src proto.Message) {
	xxx_messageInfo_SAll.Merge(m, src)
}
func (m *SAll) XXX_Size() int {
	return xxx_messageInfo_SAll.Size(m)
}
func (m *SAll) XXX_DiscardUnknown() {
	xxx_messageInfo_SAll.DiscardUnknown(m)
}

var xxx_messageInfo_SAll proto.InternalMessageInfo

func (m *SAll) GetPage() int32 {
	if m != nil {
		return m.Page
	}
	return 0
}

func (m *SAll) GetLimit() int32 {
	if m != nil {
		return m.Limit
	}
	return 0
}

//插入单条
type IPOne struct {
	Pro                  *Product `protobuf:"bytes,1,opt,name=pro,proto3" json:"pro,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *IPOne) Reset()         { *m = IPOne{} }
func (m *IPOne) String() string { return proto.CompactTextString(m) }
func (*IPOne) ProtoMessage()    {}
func (*IPOne) Descriptor() ([]byte, []int) {
	return fileDescriptor_0147923bbc6a29d9, []int{4}
}

func (m *IPOne) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_IPOne.Unmarshal(m, b)
}
func (m *IPOne) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_IPOne.Marshal(b, m, deterministic)
}
func (m *IPOne) XXX_Merge(src proto.Message) {
	xxx_messageInfo_IPOne.Merge(m, src)
}
func (m *IPOne) XXX_Size() int {
	return xxx_messageInfo_IPOne.Size(m)
}
func (m *IPOne) XXX_DiscardUnknown() {
	xxx_messageInfo_IPOne.DiscardUnknown(m)
}

var xxx_messageInfo_IPOne proto.InternalMessageInfo

func (m *IPOne) GetPro() *Product {
	if m != nil {
		return m.Pro
	}
	return nil
}

//插入多条
type IPMany struct {
	Pro                  []*Product `protobuf:"bytes,1,rep,name=pro,proto3" json:"pro,omitempty"`
	XXX_NoUnkeyedLiteral struct{}   `json:"-"`
	XXX_unrecognized     []byte     `json:"-"`
	XXX_sizecache        int32      `json:"-"`
}

func (m *IPMany) Reset()         { *m = IPMany{} }
func (m *IPMany) String() string { return proto.CompactTextString(m) }
func (*IPMany) ProtoMessage()    {}
func (*IPMany) Descriptor() ([]byte, []int) {
	return fileDescriptor_0147923bbc6a29d9, []int{5}
}

func (m *IPMany) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_IPMany.Unmarshal(m, b)
}
func (m *IPMany) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_IPMany.Marshal(b, m, deterministic)
}
func (m *IPMany) XXX_Merge(src proto.Message) {
	xxx_messageInfo_IPMany.Merge(m, src)
}
func (m *IPMany) XXX_Size() int {
	return xxx_messageInfo_IPMany.Size(m)
}
func (m *IPMany) XXX_DiscardUnknown() {
	xxx_messageInfo_IPMany.DiscardUnknown(m)
}

var xxx_messageInfo_IPMany proto.InternalMessageInfo

func (m *IPMany) GetPro() []*Product {
	if m != nil {
		return m.Pro
	}
	return nil
}

//返回结果
type Response struct {
	Code                 int32      `protobuf:"varint,1,opt,name=code,proto3" json:"code,omitempty"`
	Pro                  []*Product `protobuf:"bytes,2,rep,name=pro,proto3" json:"pro,omitempty"`
	Msg                  string     `protobuf:"bytes,3,opt,name=Msg,proto3" json:"Msg,omitempty"`
	XXX_NoUnkeyedLiteral struct{}   `json:"-"`
	XXX_unrecognized     []byte     `json:"-"`
	XXX_sizecache        int32      `json:"-"`
}

func (m *Response) Reset()         { *m = Response{} }
func (m *Response) String() string { return proto.CompactTextString(m) }
func (*Response) ProtoMessage()    {}
func (*Response) Descriptor() ([]byte, []int) {
	return fileDescriptor_0147923bbc6a29d9, []int{6}
}

func (m *Response) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_Response.Unmarshal(m, b)
}
func (m *Response) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_Response.Marshal(b, m, deterministic)
}
func (m *Response) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Response.Merge(m, src)
}
func (m *Response) XXX_Size() int {
	return xxx_messageInfo_Response.Size(m)
}
func (m *Response) XXX_DiscardUnknown() {
	xxx_messageInfo_Response.DiscardUnknown(m)
}

var xxx_messageInfo_Response proto.InternalMessageInfo

func (m *Response) GetCode() int32 {
	if m != nil {
		return m.Code
	}
	return 0
}

func (m *Response) GetPro() []*Product {
	if m != nil {
		return m.Pro
	}
	return nil
}

func (m *Response) GetMsg() string {
	if m != nil {
		return m.Msg
	}
	return ""
}

//返回空数据
type ReSimp struct {
	Code                 int32    `protobuf:"varint,1,opt,name=code,proto3" json:"code,omitempty"`
	Msg                  string   `protobuf:"bytes,2,opt,name=msg,proto3" json:"msg,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *ReSimp) Reset()         { *m = ReSimp{} }
func (m *ReSimp) String() string { return proto.CompactTextString(m) }
func (*ReSimp) ProtoMessage()    {}
func (*ReSimp) Descriptor() ([]byte, []int) {
	return fileDescriptor_0147923bbc6a29d9, []int{7}
}

func (m *ReSimp) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_ReSimp.Unmarshal(m, b)
}
func (m *ReSimp) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_ReSimp.Marshal(b, m, deterministic)
}
func (m *ReSimp) XXX_Merge(src proto.Message) {
	xxx_messageInfo_ReSimp.Merge(m, src)
}
func (m *ReSimp) XXX_Size() int {
	return xxx_messageInfo_ReSimp.Size(m)
}
func (m *ReSimp) XXX_DiscardUnknown() {
	xxx_messageInfo_ReSimp.DiscardUnknown(m)
}

var xxx_messageInfo_ReSimp proto.InternalMessageInfo

func (m *ReSimp) GetCode() int32 {
	if m != nil {
		return m.Code
	}
	return 0
}

func (m *ReSimp) GetMsg() string {
	if m != nil {
		return m.Msg
	}
	return ""
}

func init() {
	proto.RegisterType((*Product)(nil), "proto.Product")
	proto.RegisterType((*ProductInfo)(nil), "proto.ProductInfo")
	proto.RegisterType((*SbyId)(nil), "proto.SbyId")
	proto.RegisterType((*SAll)(nil), "proto.SAll")
	proto.RegisterType((*IPOne)(nil), "proto.IPOne")
	proto.RegisterType((*IPMany)(nil), "proto.IPMany")
	proto.RegisterType((*Response)(nil), "proto.Response")
	proto.RegisterType((*ReSimp)(nil), "proto.ReSimp")
}

func init() {
	proto.RegisterFile("micro.proto", fileDescriptor_0147923bbc6a29d9)
}

var fileDescriptor_0147923bbc6a29d9 = []byte{
	// 507 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0x74, 0x53, 0xdd, 0x8e, 0xda, 0x3c,
	0x10, 0xfd, 0x20, 0x1b, 0x7e, 0x26, 0x1f, 0x94, 0x5a, 0xab, 0xd6, 0x42, 0x95, 0x8a, 0x72, 0x45,
	0x2b, 0x15, 0x5a, 0xfa, 0x04, 0xf4, 0x66, 0x95, 0x8b, 0xed, 0xa2, 0xf0, 0x04, 0x06, 0xcf, 0xa6,
	0x96, 0x12, 0x3b, 0xb2, 0x4d, 0xa5, 0x7d, 0xc2, 0xbe, 0x40, 0x1f, 0xa8, 0xf2, 0x4f, 0x58, 0xba,
	0xdb, 0xbd, 0x62, 0xce, 0x99, 0x33, 0x67, 0xc6, 0x47, 0x04, 0xb2, 0x46, 0x1c, 0xb5, 0x5a, 0xb5,
	0x5a, 0x59, 0x45, 0x52, 0xff, 0x33, 0x7f, 0x5f, 0x29, 0x55, 0xd5, 0xb8, 0xf6, 0xe8, 0x70, 0xba,
	0x5f, 0x5b, 0xd1, 0xa0, 0xb1, 0xac, 0x69, 0x83, 0x2e, 0xff, 0xd5, 0x87, 0xe1, 0x4e, 0x2b, 0x7e,
	0x3a, 0x5a, 0x32, 0x85, 0xbe, 0xe0, 0xb4, 0xb7, 0xe8, 0x2d, 0xd3, 0xb2, 0x2f, 0x38, 0x59, 0x40,
	0xd6, 0x86, 0xd6, 0x77, 0xd6, 0x20, 0xed, 0x2f, 0x7a, 0xcb, 0x71, 0x79, 0x49, 0x91, 0x37, 0x30,
	0x68, 0x98, 0x3c, 0xb1, 0x9a, 0x26, 0xbe, 0x19, 0x11, 0xb9, 0x86, 0xd4, 0x58, 0x66, 0x91, 0x5e,
	0x79, 0xb3, 0x00, 0x9c, 0xda, 0x08, 0x8b, 0x05, 0xa7, 0xa9, 0xa7, 0x23, 0x72, 0x6a, 0xa6, 0x91,
	0x19, 0x3a, 0xf0, 0x26, 0x01, 0x10, 0x0a, 0x43, 0xc6, 0xb9, 0x46, 0x63, 0xe8, 0xd0, 0xf3, 0x1d,
	0x74, 0x9d, 0xa3, 0x92, 0x16, 0xa5, 0xa5, 0xa3, 0xd0, 0x89, 0xd0, 0x5d, 0xcc, 0x78, 0x23, 0xe4,
	0xc9, 0xa0, 0x2e, 0x38, 0x1d, 0xfb, 0x35, 0x97, 0x94, 0xbf, 0x4c, 0x69, 0x6b, 0x28, 0xc4, 0xcb,
	0x1c, 0xf0, 0x8e, 0x1a, 0x99, 0x45, 0x4e, 0xb3, 0xe8, 0x18, 0x20, 0x59, 0x42, 0xba, 0x2b, 0xe4,
	0xbd, 0xa2, 0xd7, 0x8b, 0x64, 0x99, 0x6d, 0x48, 0x88, 0x6d, 0x15, 0x23, 0x73, 0x9d, 0x32, 0x08,
	0x72, 0x01, 0xd9, 0x05, 0xfb, 0x2c, 0xcc, 0x77, 0x30, 0x8e, 0xc9, 0x15, 0xdc, 0x47, 0x99, 0x96,
	0x8f, 0x04, 0x99, 0xc3, 0xc8, 0xfc, 0x50, 0xad, 0x74, 0x39, 0x87, 0x28, 0xcf, 0x98, 0xcc, 0x20,
	0x11, 0x4d, 0xe5, 0xa3, 0x1c, 0x97, 0xae, 0xcc, 0xdf, 0x42, 0xba, 0x3f, 0x3c, 0x14, 0xfc, 0xe9,
	0x92, 0xfc, 0x33, 0x5c, 0xed, 0xb7, 0x75, 0x4d, 0x08, 0x5c, 0xb5, 0xac, 0xc2, 0xd8, 0xf1, 0xb5,
	0x7b, 0x79, 0x2d, 0x1a, 0x61, 0xe3, 0xf2, 0x00, 0xf2, 0x0f, 0x90, 0x16, 0xbb, 0x3b, 0x89, 0x64,
	0x01, 0x49, 0xab, 0x95, 0x9f, 0xc8, 0x36, 0xd3, 0xbf, 0x9f, 0x59, 0xba, 0x56, 0xfe, 0x11, 0x06,
	0xc5, 0xee, 0x96, 0xc9, 0x87, 0x47, 0x6d, 0xf2, 0x92, 0xb6, 0x84, 0x51, 0x89, 0xa6, 0x55, 0xd2,
	0xa0, 0x3b, 0xe6, 0xa8, 0xf8, 0xf9, 0x18, 0x57, 0x77, 0x0e, 0xfd, 0x17, 0x1d, 0xdc, 0xab, 0x6f,
	0x4d, 0x15, 0xc3, 0x70, 0x65, 0xbe, 0x82, 0x41, 0x89, 0x7b, 0xd1, 0xb4, 0xff, 0x74, 0x9c, 0x41,
	0xd2, 0x98, 0x2a, 0xfe, 0x49, 0x5d, 0xb9, 0xf9, 0xdd, 0x83, 0x69, 0xb4, 0xdc, 0xa3, 0xfe, 0x29,
	0x8e, 0x48, 0xd6, 0x30, 0xbd, 0x41, 0x1b, 0xc9, 0x6f, 0x2e, 0xc1, 0xff, 0xe3, 0x6e, 0x9f, 0xe7,
	0xfc, 0x55, 0x44, 0xe7, 0xdb, 0x3f, 0xc1, 0xe4, 0x06, 0xed, 0xb6, 0xae, 0xbb, 0x6f, 0x24, 0xeb,
	0xf4, 0xdb, 0xba, 0x7e, 0x2e, 0x5f, 0xc3, 0xac, 0x90, 0x06, 0xb5, 0xbd, 0x93, 0xd8, 0x4d, 0x74,
	0x1b, 0x7c, 0xcc, 0xf3, 0xc9, 0x79, 0xc4, 0xbf, 0xe4, 0x0b, 0xbc, 0x0e, 0x03, 0x2e, 0xd7, 0x6e,
	0x62, 0x72, 0x9e, 0x70, 0xec, 0x93, 0x91, 0xdd, 0x7f, 0x87, 0x81, 0xc7, 0x5f, 0xff, 0x04, 0x00,
	0x00, 0xff, 0xff, 0x92, 0x91, 0x5c, 0x77, 0xf1, 0x03, 0x00, 0x00,
}

// Reference imports to suppress errors if they are not otherwise used.
var _ context.Context
var _ grpc.ClientConnInterface

// This is a compile-time assertion to ensure that this generated file
// is compatible with the grpc package it is being compiled against.
const _ = grpc.SupportPackageIsVersion6

// ProductServiceClient is the client API for ProductService service.
//
// For semantics around ctx use and closing/ending streaming RPCs, please refer to https://godoc.org/google.golang.org/grpc#ClientConn.NewStream.
type ProductServiceClient interface {
	GetProductById(ctx context.Context, in *SbyId, opts ...grpc.CallOption) (*Response, error)
	GetAllProduct(ctx context.Context, in *SAll, opts ...grpc.CallOption) (*Response, error)
	InsertOneProduct(ctx context.Context, in *IPOne, opts ...grpc.CallOption) (*ReSimp, error)
	InsertManyProduct(ctx context.Context, in *IPMany, opts ...grpc.CallOption) (*ReSimp, error)
}

type productServiceClient struct {
	cc grpc.ClientConnInterface
}

func NewProductServiceClient(cc grpc.ClientConnInterface) ProductServiceClient {
	return &productServiceClient{cc}
}

func (c *productServiceClient) GetProductById(ctx context.Context, in *SbyId, opts ...grpc.CallOption) (*Response, error) {
	out := new(Response)
	err := c.cc.Invoke(ctx, "/proto.ProductService/GetProductById", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *productServiceClient) GetAllProduct(ctx context.Context, in *SAll, opts ...grpc.CallOption) (*Response, error) {
	out := new(Response)
	err := c.cc.Invoke(ctx, "/proto.ProductService/GetAllProduct", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *productServiceClient) InsertOneProduct(ctx context.Context, in *IPOne, opts ...grpc.CallOption) (*ReSimp, error) {
	out := new(ReSimp)
	err := c.cc.Invoke(ctx, "/proto.ProductService/InsertOneProduct", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *productServiceClient) InsertManyProduct(ctx context.Context, in *IPMany, opts ...grpc.CallOption) (*ReSimp, error) {
	out := new(ReSimp)
	err := c.cc.Invoke(ctx, "/proto.ProductService/InsertManyProduct", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

// ProductServiceServer is the server API for ProductService service.
type ProductServiceServer interface {
	GetProductById(context.Context, *SbyId) (*Response, error)
	GetAllProduct(context.Context, *SAll) (*Response, error)
	InsertOneProduct(context.Context, *IPOne) (*ReSimp, error)
	InsertManyProduct(context.Context, *IPMany) (*ReSimp, error)
}

// UnimplementedProductServiceServer can be embedded to have forward compatible implementations.
type UnimplementedProductServiceServer struct {
}

func (*UnimplementedProductServiceServer) GetProductById(ctx context.Context, req *SbyId) (*Response, error) {
	return nil, status.Errorf(codes.Unimplemented, "method GetProductById not implemented")
}
func (*UnimplementedProductServiceServer) GetAllProduct(ctx context.Context, req *SAll) (*Response, error) {
	return nil, status.Errorf(codes.Unimplemented, "method GetAllProduct not implemented")
}
func (*UnimplementedProductServiceServer) InsertOneProduct(ctx context.Context, req *IPOne) (*ReSimp, error) {
	return nil, status.Errorf(codes.Unimplemented, "method InsertOneProduct not implemented")
}
func (*UnimplementedProductServiceServer) InsertManyProduct(ctx context.Context, req *IPMany) (*ReSimp, error) {
	return nil, status.Errorf(codes.Unimplemented, "method InsertManyProduct not implemented")
}

func RegisterProductServiceServer(s *grpc.Server, srv ProductServiceServer) {
	s.RegisterService(&_ProductService_serviceDesc, srv)
}

func _ProductService_GetProductById_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(SbyId)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(ProductServiceServer).GetProductById(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/proto.ProductService/GetProductById",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(ProductServiceServer).GetProductById(ctx, req.(*SbyId))
	}
	return interceptor(ctx, in, info, handler)
}

func _ProductService_GetAllProduct_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(SAll)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(ProductServiceServer).GetAllProduct(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/proto.ProductService/GetAllProduct",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(ProductServiceServer).GetAllProduct(ctx, req.(*SAll))
	}
	return interceptor(ctx, in, info, handler)
}

func _ProductService_InsertOneProduct_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(IPOne)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(ProductServiceServer).InsertOneProduct(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/proto.ProductService/InsertOneProduct",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(ProductServiceServer).InsertOneProduct(ctx, req.(*IPOne))
	}
	return interceptor(ctx, in, info, handler)
}

func _ProductService_InsertManyProduct_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(IPMany)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(ProductServiceServer).InsertManyProduct(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/proto.ProductService/InsertManyProduct",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(ProductServiceServer).InsertManyProduct(ctx, req.(*IPMany))
	}
	return interceptor(ctx, in, info, handler)
}

var _ProductService_serviceDesc = grpc.ServiceDesc{
	ServiceName: "proto.ProductService",
	HandlerType: (*ProductServiceServer)(nil),
	Methods: []grpc.MethodDesc{
		{
			MethodName: "GetProductById",
			Handler:    _ProductService_GetProductById_Handler,
		},
		{
			MethodName: "GetAllProduct",
			Handler:    _ProductService_GetAllProduct_Handler,
		},
		{
			MethodName: "InsertOneProduct",
			Handler:    _ProductService_InsertOneProduct_Handler,
		},
		{
			MethodName: "InsertManyProduct",
			Handler:    _ProductService_InsertManyProduct_Handler,
		},
	},
	Streams:  []grpc.StreamDesc{},
	Metadata: "micro.proto",
}
